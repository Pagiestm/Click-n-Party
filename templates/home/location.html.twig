{% extends 'base.html.twig' %}

{% block title %}Location - {{ location.getNom() }}{% endblock %}

{% block body %}
    <h1>{{ location.getNom() }}</h1>
    <div class="swiper-container overflow-hidden">
        <div class="swiper-wrapper">
            {% for image in location.images %}
                <div class="swiper-slide">
                    <img class="w-full h-64 md:h-96 lg:h-96 object-cover mb-6 rounded" src="{{ asset('uploads/' ~ image.Nom) }}" alt="{{ location.Nom }}">
                </div>
            {% endfor %}
        </div>
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
    </div>                        
    <p>Description: {{ location.getDescription() }}</p>
    <p>Prix: {{ location.getPrix() }} $ par jour</p>
    <p>Adresse: {{ location.getAdresse() }}</p>
    <p>Disponible du {{ location.getDateDebutDisponibilite()|date('d-m-Y') }} au {{ location.getDateFinDisponibilite()|date('d-m-Y') }}</p>
    <p>Capacité maximale: {{ location.getCapaciteMaximal() }}</p>
    <p>Accessible aux personnes à mobilité réduite: {{ location.isPMR() ? 'Oui' : 'Non' }}</p>
    <p>Actif: {{ location.isActif() ? 'Oui' : 'Non' }}</p>
    <p>Catégories: 
        {% for category in location.getCategories() %}
            {{ category.getLibelle() }}
        {% endfor %}
    </p>

    <div id='calendar'></div>
    {{ form_start(reservationForm) }}
    {{ form_row(reservationForm.Date_debut, { 'id': 'dateDebut', 'type': 'hidden', 'attr': {'class': 'dateDebut'} }) }}
    {{ form_row(reservationForm.Date_fin, { 'id': 'dateFin', 'type': 'hidden', 'attr': {'class': 'dateFin'} }) }}
    {{ form_row(reservationForm.Statut) }}
    {{ form_row(reservationForm.NombresDeLocataires) }}
    <button type="submit" class="btn btn-primary">Réserver</button>
    {{ form_end(reservationForm) }}

    {% for message in app.flashes('error') %}
    <div class="alert alert-danger">
        {{ message }}
    </div>
{% endfor %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let calendarEl = document.getElementById('calendar');
            let startDate = null;
            let userSelectionId = 'userSelection'; // Unique ID for user selection
            let calendar = new FullCalendar.Calendar(calendarEl, {
                locale: 'fr',
                initialView: 'dayGridMonth',
                selectable: true,
                headerToolbar: {
                    left: '',
                    center: 'title',
                    right: 'prev,next'
                },
                events: [
                    {
                        start: '{{ location.getDateDebutDisponibilite()|date('Y-m-d') }}',
                        end: '{{ location.getDateFinDisponibilite()|date('Y-m-d', 'UTC') }}',
                        color: '#378006'
                    },
                    {% for reservation in reservations %}
                    {
                        start: '{{ reservation.dateDebut|date('Y-m-d') }}',
                        end: '{{ reservation.dateFin|date_modify('+1 day')|date('Y-m-d', 'UTC') }}',
                        rendering: 'background',
                        overlap: false,
                        color: '#808080', 
                        groupId: 'reservations'
                    },
                    {% endfor %}
                ],
                selectAllow: function(selectInfo) {
                    let events = calendar.getEvents();
                    let isSelectionAllowed = true;
                    events.forEach(function(event) {
                        if (event.groupId === 'reservations' && selectInfo.start < event.end && selectInfo.end > event.start) {
                            isSelectionAllowed = false;
                        }
                    });
                    return isSelectionAllowed;
                },
                dateClick: function(info) {
                    let events = calendar.getEvents();
                    let isSelectionAllowed = true;
                    events.forEach(function(event) {
                        if (event.groupId === 'reservations' && info.date >= event.start && info.date <= event.end) {
                            isSelectionAllowed = false;
                        }
                    });
                    if (isSelectionAllowed) {
                        if (startDate === null) {
                            startDate = info.dateStr;
                        } else {
                            let endDate = new Date(info.dateStr);
                            endDate.setDate(endDate.getDate() + 1);
                            document.getElementById('dateDebut').value = startDate;
                            document.getElementById('dateFin').value = info.dateStr;
                            let oldSelection = calendar.getEventById(userSelectionId);
                            if (oldSelection) {
                                oldSelection.remove();
                            }
                            calendar.addEvent({
                                id: userSelectionId,
                                start: startDate,
                                end: endDate.toISOString().split('T')[0],
                                color: '#0000FF'
                            });
                            startDate = null;
                        }
                    }
                }
            });
            calendar.render();
        });
    </script>
{% endblock %}

{% endblock %}